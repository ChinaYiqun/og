线程与进程的区别

进程是系统进行资源分配和调度的一个独立单位

线程:进程的一个实体,是CPU调度和分派的基本单位,它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源,只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈),但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源。

线程的通信与进程的通信

他们之间根本区别在于 多进程中每个进程有自己的地址空间，线程则共享地址空间。

	进程：
	管道( pipe )：
	管道是一种半双工的通信方式，数据只能单向流动，而且只能在具有亲缘关系的进程间使用。进程的亲缘关系通常是指父子进程关系。

	信号量(semophore ) ：
	信号量是一个计数器，可以用来控制多个进程对共享资源的访问

	消息队列( messagequeue ) ：
	消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。消息队列克服了信号传递信息少、管道只能承载无格式字节流以及缓冲区大小受限等缺点。

	共享内存(shared memory ) ：
	共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问

	套接字(socket )


    锁机制：包括互斥锁、条件变量、读写锁
    互斥锁提供了以排他方式防止数据结构被并发修改的方法。
    读写锁允许多个线程同时读共享数据，而对写操作是互斥的。
    条件变量可以以原子的方式阻塞进程，直到某个特定条件为真为止。对条件的
    测试是在互斥锁的保护下进行的。条件变量始终与互斥锁一起使用。
    
    信号量机制(Semaphore)：包括无名线程信号量和命名线程信号量
    
    信号机制(Signal)：类似进程间的信号处理
    线程间的通信目的主要是用于线程同步，所以线程没有像进程通信中的用于数据交换的通信机制。
