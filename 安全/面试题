session工作原理
session 的工作原理是客户端登录完成之后，服务器会创建对应的 session，session 创建完之后，会把 session 的 id 发送给客户端，客户端再存储到浏览器中。这样客户端每次访问服务器时，都会带着 sessionid，服务器拿到 sessionid 之后，在内存找到与之对应的 session 这样就可以正常工作了。

session和cookie区别
存储位置不同：session 存储在服务器端；cookie 存储在浏览器端。
安全性不同：cookie 安全性一般，在浏览器存储，可以被伪造和修改。
容量和个数限制：cookie 有容量限制，每个站点下的 cookie 也有个数限制。
存储的多样性：session 可以存储在 Redis 中、数据库中、应用程序中；而 cookie 只能存储在浏览器中。

假定载客户端禁止 cookie下session如何使用？
1》 设置php.ini配置文件中的“session.use_trans_sid = 1”，或者编译时打开打开了“--enable-trans-sid”选项，让PHP自动跨页传递Session ID。
2》 手动通过URL传值、隐藏表单传递Session ID。
3》 用文件、数据库等形式保存Session ID，在跨页过程中手动调用。

SQL
1.注入原理及常见类型、MySQL注入语句、注入拿shell语句、SQL盲注原理、常用注入语句及相关函数、常见防护手段、绕过方法
防护：使用预处理 PreparedStatement。使用正则表达式过滤掉字符中的特殊字符。


XSS
1.概念，防护手段

CSRF
1.概念，防护手段
CSRF：Cross-Site Request Forgery（中文：跨站请求伪造），可以理解为攻击者盗用了你的身份，以你的名义发送恶意请求，比如：以你名义发送邮件、发消息、购买商品，虚拟货币转账等。
避免方法：
CSRF 漏洞进行检测的工具，如 CSRFTester、CSRF Request Builder...
验证 HTTP Referer 字段
添加并验证 token
添加自定义 http 请求头
敏感操作添加验证码
使用 post 请求

参考链接：https://zhuanlan.zhihu.com/p/104859107
