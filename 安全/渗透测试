XSS攻击
概念：XSS是跨站脚本攻击(Cross Site Scripting)。恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。如盗取用户 cookie、破坏页面结构、重定向到其他网站等。
本质是「对用户当前浏览的页面植入恶意脚本」。具体说，就是黑客为页面添加网站开发者意图之外的逻辑，其实现方式是在网站开发者提供的用于显示用户数据的地方加入脚本。

原理：向web页面插入js代码，让js代码可以被浏览器执行，访问该页面的用户则被攻击
被攻击的网站往往满足两个特征
1、具备表单元素
2、网站有漏洞，即，可以往表单元素插入存在 js 脚本的 html 元素。

分类：
1.反射型：通过get请求将js代码放在URL上，接受者是后端
	原理：攻击者在URL中插入xss代码，服务端将URL中的xss代码输出到页面上，攻击者将带有xss代码的URL发送给用户，用户打开后收到xss攻击
2.持久型：攻击者在页面上插入XSS代码，服务端将数据存到数据库或其他介质中，当用户访问页面时，服务端从数据库中取出数据展示到页面上，导致XSS代码执行，达到攻击效果
3.DOM型（基于文档对象模型）：通过恶意脚本修改页面的 DOM 结构，是纯粹发生在客户端的攻击。
	DOM 型 XSS 跟前两种 XSS 的区别：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。
	原理：攻击者在URL中插入xss代码，前端页面将URL中的xss代码输出到页面上，攻击者将带有xss代码的URL发送给用户，用户打开后收到xss攻击
	攻击方式：1.使用document.write（）直接把内容输出到网页导致XSS漏洞。 
			2.使用innerHTML直接把内容输出至网页导致XSS漏洞。

防御：1.白名单过滤（设置允许存在的标签，不存在白名单的直接返回）；黑名单过滤（自己设定过滤的标签，函数str_place()、preg_replace()） 
	 2.编码（htmlspecialchars() 函数把预定义的字符转换为 HTML 实体，只转义 & 、" 、' 、< 、> ）（htmlentities 却会转化所有的html代码，连同里面的它无法识别的中文字符也会转化)当flag字段为不同的值时，可选。规定如何处理引号、无效的编码以及使用哪种文档类型） 
	 3.限制

工具：beef

参考链接：https://blog.csdn.net/qq_35393693/article/details/86597707
		https://zhuanlan.zhihu.com/p/26177815
		https://zhuanlan.zhihu.com/p/270988263

SQL注入
概念：通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。